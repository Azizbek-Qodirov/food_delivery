// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.1
// source: food-delivery-protos/product.proto

package genprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProductRatingUReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string  `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Rate      float32 `protobuf:"fixed32,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *ProductRatingUReq) Reset() {
	*x = ProductRatingUReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductRatingUReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRatingUReq) ProtoMessage() {}

func (x *ProductRatingUReq) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRatingUReq.ProtoReflect.Descriptor instead.
func (*ProductRatingUReq) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{0}
}

func (x *ProductRatingUReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductRatingUReq) GetRate() float32 {
	if x != nil {
		return x.Rate
	}
	return 0
}

type ProductCountUReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string  `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Count     float32 `protobuf:"fixed32,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ProductCountUReq) Reset() {
	*x = ProductCountUReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCountUReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCountUReq) ProtoMessage() {}

func (x *ProductCountUReq) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCountUReq.ProtoReflect.Descriptor instead.
func (*ProductCountUReq) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{1}
}

func (x *ProductCountUReq) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *ProductCountUReq) GetCount() float32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ProductCReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Category          string            `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Count             float64           `protobuf:"fixed64,3,opt,name=count,proto3" json:"count,omitempty"`
	Description       string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	ImgUrl            string            `protobuf:"bytes,5,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Size              float32           `protobuf:"fixed32,6,opt,name=size,proto3" json:"size,omitempty"`
	Weight            float32           `protobuf:"fixed32,7,opt,name=weight,proto3" json:"weight,omitempty"`
	Rating            float32           `protobuf:"fixed32,8,opt,name=rating,proto3" json:"rating,omitempty"`
	Seller            string            `protobuf:"bytes,9,opt,name=seller,proto3" json:"seller,omitempty"`
	AdditionalDetails map[string]string `protobuf:"bytes,10,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProductCReq) Reset() {
	*x = ProductCReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCReq) ProtoMessage() {}

func (x *ProductCReq) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCReq.ProtoReflect.Descriptor instead.
func (*ProductCReq) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{2}
}

func (x *ProductCReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductCReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ProductCReq) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductCReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductCReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *ProductCReq) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ProductCReq) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductCReq) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ProductCReq) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *ProductCReq) GetAdditionalDetails() map[string]string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type ProductUReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category          string            `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Count             float64           `protobuf:"fixed64,4,opt,name=count,proto3" json:"count,omitempty"`
	Description       string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ImgUrl            string            `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Size              float32           `protobuf:"fixed32,7,opt,name=size,proto3" json:"size,omitempty"`
	Weight            float32           `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Rating            float32           `protobuf:"fixed32,9,opt,name=rating,proto3" json:"rating,omitempty"`
	Seller            string            `protobuf:"bytes,10,opt,name=seller,proto3" json:"seller,omitempty"`
	AdditionalDetails map[string]string `protobuf:"bytes,11,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProductUReq) Reset() {
	*x = ProductUReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductUReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductUReq) ProtoMessage() {}

func (x *ProductUReq) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductUReq.ProtoReflect.Descriptor instead.
func (*ProductUReq) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{3}
}

func (x *ProductUReq) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductUReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductUReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ProductUReq) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductUReq) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductUReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *ProductUReq) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ProductUReq) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductUReq) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ProductUReq) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *ProductUReq) GetAdditionalDetails() map[string]string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type ProductGRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Category          string            `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	Count             float64           `protobuf:"fixed64,4,opt,name=count,proto3" json:"count,omitempty"`
	Description       string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	ImgUrl            string            `protobuf:"bytes,6,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`
	Size              float32           `protobuf:"fixed32,7,opt,name=size,proto3" json:"size,omitempty"`
	Weight            float32           `protobuf:"fixed32,8,opt,name=weight,proto3" json:"weight,omitempty"`
	Rating            float32           `protobuf:"fixed32,9,opt,name=rating,proto3" json:"rating,omitempty"`
	Seller            string            `protobuf:"bytes,10,opt,name=seller,proto3" json:"seller,omitempty"`
	AdditionalDetails map[string]string `protobuf:"bytes,11,rep,name=additional_details,json=additionalDetails,proto3" json:"additional_details,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProductGRes) Reset() {
	*x = ProductGRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGRes) ProtoMessage() {}

func (x *ProductGRes) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGRes.ProtoReflect.Descriptor instead.
func (*ProductGRes) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{4}
}

func (x *ProductGRes) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProductGRes) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductGRes) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ProductGRes) GetCount() float64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ProductGRes) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProductGRes) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *ProductGRes) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *ProductGRes) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductGRes) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *ProductGRes) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *ProductGRes) GetAdditionalDetails() map[string]string {
	if x != nil {
		return x.AdditionalDetails
	}
	return nil
}

type ProductGAReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category   string      `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	Count      string      `protobuf:"bytes,2,opt,name=count,proto3" json:"count,omitempty"`
	Rating     string      `protobuf:"bytes,3,opt,name=rating,proto3" json:"rating,omitempty"`
	Seller     string      `protobuf:"bytes,4,opt,name=seller,proto3" json:"seller,omitempty"`
	Pagination *Pagination `protobuf:"bytes,5,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *ProductGAReq) Reset() {
	*x = ProductGAReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGAReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGAReq) ProtoMessage() {}

func (x *ProductGAReq) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGAReq.ProtoReflect.Descriptor instead.
func (*ProductGAReq) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{5}
}

func (x *ProductGAReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *ProductGAReq) GetCount() string {
	if x != nil {
		return x.Count
	}
	return ""
}

func (x *ProductGAReq) GetRating() string {
	if x != nil {
		return x.Rating
	}
	return ""
}

func (x *ProductGAReq) GetSeller() string {
	if x != nil {
		return x.Seller
	}
	return ""
}

func (x *ProductGAReq) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type ProductGARes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []*ProductGRes `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
}

func (x *ProductGARes) Reset() {
	*x = ProductGARes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_food_delivery_protos_product_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductGARes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductGARes) ProtoMessage() {}

func (x *ProductGARes) ProtoReflect() protoreflect.Message {
	mi := &file_food_delivery_protos_product_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductGARes.ProtoReflect.Descriptor instead.
func (*ProductGARes) Descriptor() ([]byte, []int) {
	return file_food_delivery_protos_product_proto_rawDescGZIP(), []int{6}
}

func (x *ProductGARes) GetProducts() []*ProductGRes {
	if x != nil {
		return x.Products
	}
	return nil
}

var File_food_delivery_protos_product_proto protoreflect.FileDescriptor

var file_food_delivery_protos_product_proto_rawDesc = []byte{
	0x0a, 0x22, 0x66, 0x6f, 0x6f, 0x64, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x1a, 0x1f,
	0x66, 0x6f, 0x6f, 0x64, 0x2d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2d, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x76, 0x6f, 0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x46, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x55, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x22, 0x47, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x8d, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5b, 0x0a,
	0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x52, 0x65, 0x71,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9d, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x52, 0x65, 0x71,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5b, 0x0a,
	0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x52, 0x65, 0x71,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x9d, 0x03, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x52, 0x65, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5b, 0x0a,
	0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x52, 0x65, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x1a, 0x44, 0x0a, 0x16, 0x41, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xa6, 0x01, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x41, 0x52, 0x65,
	0x71, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c,
	0x6c, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x41, 0x0a, 0x0c, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x47, 0x41, 0x52, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x52,
	0x65, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x32, 0xfc, 0x02, 0x0a,
	0x0e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3b, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x1b, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x55, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x55, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x43, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x55, 0x52, 0x65, 0x71, 0x1a, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x2e, 0x56, 0x6f, 0x69, 0x64, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x42,
	0x79, 0x49, 0x44, 0x1a, 0x0e, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x56,
	0x6f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x42, 0x79, 0x49, 0x44, 0x1a, 0x15, 0x2e, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x52, 0x65,
	0x73, 0x12, 0x38, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x12, 0x16, 0x2e, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x41,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x47, 0x41, 0x52, 0x65, 0x73, 0x42, 0x0c, 0x5a, 0x0a, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_food_delivery_protos_product_proto_rawDescOnce sync.Once
	file_food_delivery_protos_product_proto_rawDescData = file_food_delivery_protos_product_proto_rawDesc
)

func file_food_delivery_protos_product_proto_rawDescGZIP() []byte {
	file_food_delivery_protos_product_proto_rawDescOnce.Do(func() {
		file_food_delivery_protos_product_proto_rawDescData = protoimpl.X.CompressGZIP(file_food_delivery_protos_product_proto_rawDescData)
	})
	return file_food_delivery_protos_product_proto_rawDescData
}

var file_food_delivery_protos_product_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_food_delivery_protos_product_proto_goTypes = []any{
	(*ProductRatingUReq)(nil), // 0: delivery.ProductRatingUReq
	(*ProductCountUReq)(nil),  // 1: delivery.ProductCountUReq
	(*ProductCReq)(nil),       // 2: delivery.ProductCReq
	(*ProductUReq)(nil),       // 3: delivery.ProductUReq
	(*ProductGRes)(nil),       // 4: delivery.ProductGRes
	(*ProductGAReq)(nil),      // 5: delivery.ProductGAReq
	(*ProductGARes)(nil),      // 6: delivery.ProductGARes
	nil,                       // 7: delivery.ProductCReq.AdditionalDetailsEntry
	nil,                       // 8: delivery.ProductUReq.AdditionalDetailsEntry
	nil,                       // 9: delivery.ProductGRes.AdditionalDetailsEntry
	(*Pagination)(nil),        // 10: delivery.Pagination
	(*ByID)(nil),              // 11: delivery.ByID
	(*Void)(nil),              // 12: delivery.Void
}
var file_food_delivery_protos_product_proto_depIdxs = []int32{
	7,  // 0: delivery.ProductCReq.additional_details:type_name -> delivery.ProductCReq.AdditionalDetailsEntry
	8,  // 1: delivery.ProductUReq.additional_details:type_name -> delivery.ProductUReq.AdditionalDetailsEntry
	9,  // 2: delivery.ProductGRes.additional_details:type_name -> delivery.ProductGRes.AdditionalDetailsEntry
	10, // 3: delivery.ProductGAReq.pagination:type_name -> delivery.Pagination
	4,  // 4: delivery.ProductGARes.products:type_name -> delivery.ProductGRes
	0,  // 5: delivery.ProductService.UpdateRating:input_type -> delivery.ProductRatingUReq
	1,  // 6: delivery.ProductService.UpdateCount:input_type -> delivery.ProductCountUReq
	2,  // 7: delivery.ProductService.Create:input_type -> delivery.ProductCReq
	3,  // 8: delivery.ProductService.Update:input_type -> delivery.ProductUReq
	11, // 9: delivery.ProductService.Delete:input_type -> delivery.ByID
	11, // 10: delivery.ProductService.Get:input_type -> delivery.ByID
	5,  // 11: delivery.ProductService.GetAll:input_type -> delivery.ProductGAReq
	12, // 12: delivery.ProductService.UpdateRating:output_type -> delivery.Void
	12, // 13: delivery.ProductService.UpdateCount:output_type -> delivery.Void
	12, // 14: delivery.ProductService.Create:output_type -> delivery.Void
	12, // 15: delivery.ProductService.Update:output_type -> delivery.Void
	12, // 16: delivery.ProductService.Delete:output_type -> delivery.Void
	4,  // 17: delivery.ProductService.Get:output_type -> delivery.ProductGRes
	6,  // 18: delivery.ProductService.GetAll:output_type -> delivery.ProductGARes
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_food_delivery_protos_product_proto_init() }
func file_food_delivery_protos_product_proto_init() {
	if File_food_delivery_protos_product_proto != nil {
		return
	}
	file_food_delivery_protos_void_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_food_delivery_protos_product_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*ProductRatingUReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_delivery_protos_product_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ProductCountUReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_delivery_protos_product_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ProductCReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_delivery_protos_product_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ProductUReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_delivery_protos_product_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ProductGRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_delivery_protos_product_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ProductGAReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_food_delivery_protos_product_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ProductGARes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_food_delivery_protos_product_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_food_delivery_protos_product_proto_goTypes,
		DependencyIndexes: file_food_delivery_protos_product_proto_depIdxs,
		MessageInfos:      file_food_delivery_protos_product_proto_msgTypes,
	}.Build()
	File_food_delivery_protos_product_proto = out.File
	file_food_delivery_protos_product_proto_rawDesc = nil
	file_food_delivery_protos_product_proto_goTypes = nil
	file_food_delivery_protos_product_proto_depIdxs = nil
}
